name: Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      need_update: ${{ env.json_Update }}
      filename: ${{ env.json_FileName }}
      content: ${{ env.json_Body }}
      title: ${{ env.json_Title }}
      version: ${{ env.json_Version }}
      prerelease: ${{ env.json_PreRelease }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "temurin"

      - name: Configure git credentials
        uses: OleksiyRudenko/gha-git-credentials@v2.1.1
        with:
          global: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Version and Build
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npm start

      - name: Load output file to env
        uses: antifree/json-to-variables@v1.0.1
        with:
          filename: output.json

      - name: Upload Artifacts
        if: ${{ env.json_Update == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            ${{ env.json_FileName }}
            README_zh.md

  release-github:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.outputs.need_update == 'true' }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: package

      - name: Create Release on Github
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{ needs.build.outputs.filename }}
          body: ${{ needs.build.outputs.content }}
          name: ${{ needs.build.outputs.title }}
          tag: ${{ needs.build.outputs.version }}
          prerelease: ${{ needs.build.outputs.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
